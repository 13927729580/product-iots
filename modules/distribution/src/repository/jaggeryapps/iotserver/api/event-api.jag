<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var uri = request.getRequestURI();
var uriMatcher = new URIMatcher(String(uri));

var log = new Log("api/event-api.jag");

var constants = require("/modules/constants.js");
var dcProps = require('/config/dc-props.js').config();

var user = session.get(constants.USER_SESSION_KEY);
if (!user) {
	response.sendRedirect(dcProps.appContext + "login?#login-required");
	exit();//stop execution
}

var result;

if (uriMatcher.match("/{context}/api/event/list")) {

	/*
	 var timeInterval = 30;
	 var i, rnd;
	 result = [];
	 var currentDay = new Date();
	 var startDate = currentDay.getTime() - (60 * 60 * 24 * 100);
	 var endDate = currentDay.getTime();

	 var i = parseInt(startDate / 1000);
	 while (i < parseInt(endDate / 1000)) {
	 rnd = rnd = Math.random() * 50;
	 result.push({time: i * 1000, deviceName: 'device' + rnd, activity:'Event number ' + rnd});
	 i += timeInterval;
	 }
	 */

	try {
		result = statsClient.getRecentDeviceStats(user, 10);
	} catch (error) {
		log.error(error);
	}

<<<<<<< HEAD
	var eventsData = [];

	if (fetchedData == null) return [];

	for (var i = 0; i < fetchedData.size(); i++) {
		//eventsData.push({
		//	time: fetchedData.get(i).getTime(),
		//	deviceName: fetchedData.get(i).getDeviceName(),
		//	activity: fetchedData.get(i).getDeviceActivity()
		//});

		eventsData.push({
			time: 234234,
			deviceName: "my device",
			activity: "test"
		});
	}

	return eventsData;
=======
>>>>>>> 91ab732dba19d87bc74860cfc7eca8953beb2120
}

// returning the result.
if (result) {
	print(result);
}
%>