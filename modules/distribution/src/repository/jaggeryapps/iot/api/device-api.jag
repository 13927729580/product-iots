<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var uri = request.getRequestURI();
var uriMatcher = new URIMatcher(String(uri));

var log = new Log("api/device-api.jag");

var constants = require("/modules/constants.js");
var dcProps = require('/config/dc-props.js').config();

var carbon = require('carbon');
var carbonHttpServletTransport = carbon.server.address('http');
var carbonHttpsServletTransport = carbon.server.address('https');

var result;

if (uriMatcher.match("/{context}/api/device/sketch/")) {
	sketchType = request.getParameter("type");
	if (!sketchType) {
		log.error("Sketch Type is empty");
	}

	var user = session.get(constants.USER_SESSION_KEY);
	if (!user) {
		response.sendRedirect(dcProps.appContext + "login?#login-required");
		exit();
	}

	//URL: /iotdevices/FireAlarmManager/device/firealarm/download
	fireAlarmManagerService = carbonHttpsServletTransport + "/firealarm/manager";
	sketchDownloadEndPoint = fireAlarmManagerService + "/device/" + sketchType + "/download";
	response.sendRedirect(sketchDownloadEndPoint + "?owner=" + user.username);
	exit();
}

if (uriMatcher.match("/{context}/api/devices/")) {

	var constants = require("/modules/constants.js");

	var user = session.get(constants.USER_SESSION_KEY);
	if (!user) {
		response.sendRedirect(dcProps.appContext + "login?#login-required");
		exit();
	}

	//URL: /iotdevices/DevicesManager/devices/username
	devicesManagerService = carbonHttpsServletTransport + "/devicecloud/manager";
	listAllDevicesEndPoint = devicesManagerService + "/devices/username/" + user.username;

	var data = {};
	//XMLHTTPRequest's GET
	result = get(listAllDevicesEndPoint, data, "json");

	//response.sendRedirect(listAllDevicesEndPoint + "?username="+user.username);
	//exit();
}

// returning the result.
if (result) {
	print(result);
}
%>
